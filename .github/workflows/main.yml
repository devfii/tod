name: CI/CD for TOD app
on:
  #push:
  #  branches: ["main"]
  workflow_dispatch
  
jobs:
  #build app, test and push to ecr
  build:
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.build-image.outputs.image }}
    steps:
    - name: checkout main branch
      uses: actions/checkout@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with: 
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
        mask-aws-account-id: 'false'
    - name: login into Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1
    - name: build, tag, push docker image
      id: build-image
      env: 
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #echo $image
        #echo "::add-mask::$image"
        docker build -t $image .
        docker push $image
        #echo "image=$image" >> "$GITHUB_OUTPUT"
        result=$(gpg --symmetric --batch --passphrase "${{ secrets.PASSWORD }}" --output - <(echo "${image}") | base64 -w0)
        echo "image=${result}" >> $GITHUB_OUTPUT

  #deploy to staging
  deploy_to_staging:
    runs-on: ubuntu-22.04
    needs: build
    steps:
    - name: checkout main branch
      uses: actions/checkout@v3
    - name: find and replace task definition values
      run: |
        result=$(gpg --decrypt --quiet --batch --passphrase "${{ secrets.PASSWORD }}" --output - <(echo "${{ needs.build.outputs.image }}" | base64 -d))
        echo $result
        echo "::add-mask::${result}"
        echo $result
        sed -i 's|AWS_REGION|${{ vars.AWS_REGION }}|g; s|EXECUTION_ROLE_ARN|${{ secrets.EXECUTION_ROLE_ARN }}|g; s|CONTAINER_IMAGE|$result|g' task_definition.json
        cat task_definition.json
        echo "image=${result}" >> $GITHUB_OUTPUT
      



      
  #deploy to prod


